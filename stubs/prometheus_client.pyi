from typing import Any, Iterable, Protocol


class _Metric(Protocol):
    def labels(self, *label_values: Any, **label_kwargs: Any) -> "_Metric": ...


class Gauge:
    def __init__(self, name: str, documentation: str, labelnames: Iterable[str]) -> None: ...
    def labels(self, *label_values: Any, **label_kwargs: Any) -> "Gauge": ...
    def set(self, value: float) -> None: ...
    def clear(self) -> None: ...


class Counter:
    def __init__(self, name: str, documentation: str, labelnames: Iterable[str]) -> None: ...
    def labels(self, *label_values: Any, **label_kwargs: Any) -> "Counter": ...
    def inc(self, amount: float = ...) -> None: ...


class Histogram:
    def __init__(
        self,
        name: str,
        documentation: str,
        *,
        buckets: Iterable[float] | None = None,
    ) -> None: ...

    def labels(self, *label_values: Any, **label_kwargs: Any) -> "Histogram": ...
    def observe(self, amount: float) -> None: ...


__all__ = ["Counter", "Gauge", "Histogram"]
